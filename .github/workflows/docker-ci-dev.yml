name: Build, Push, and Deploy to Kubernetes

on:
  push:
    branches:
      - dev
      - issue-266

jobs:
  build-push-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create src/main/resources/bootstrap.yml
        run: |
          mkdir -p src/main/resources
          echo "encrypt:" > src/main/resources/bootstrap.yml
          echo "  key: '${{ secrets.ENCRYPTKEY }}'" >> src/main/resources/bootstrap.yml

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GTOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create Release Name
        id: release_name
        run: |
          echo "::set-output name=release_name::v-$(date +'%Y.%m.%d-%H%M%S')"

      - name: Build and Push Docker Dev Image
        run: |
          RELEASE_NAME="${{ steps.release_name.outputs.release_name }}"
          docker build --build-arg SPRING_PROFILES_ACTIVE=dev -t my-product-server:latest -f multistage.Dockerfile .
          docker tag my-product-server:latest ghcr.io/liberty52/liberty52-product-server:dev-$RELEASE_NAME
          docker push ghcr.io/liberty52/liberty52-product-server:dev-$RELEASE_NAME

      - name: Update Kubernetes Manifest
        run: |
          RELEASE_NAME="${{ steps.release_name.outputs.release_name }}"
          sed -i 's#image: ghcr.io/liberty52/infrastructure:dev-.*$#image: ghcr.io/liberty52/liberty52-product-server:dev-$RELEASE_NAME#' liberty52/infrastructure/kubernetes-manifests/product-server/product-server-deployment.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "liberty52.product@github.com"
          git config --global user.name "liberty52_Product"
          git add infrastructure/kubernetes-deployment.yaml
          git commit -m "Update image tag to $RELEASE_NAME"
          git push

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_name.outputs.release_name }}
          release_name: Release ${{ steps.release_name.outputs.release_name }}
          generateReleaseNotes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GTOKEN }}

      - name: Clean up
        run: docker logout ghcr.io