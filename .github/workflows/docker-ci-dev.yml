name: Build and Push Docker Image for DEV

on:
  push:
    branches:
      - LIB-227

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create src/main/resources/bootstrap.yml
        run: |
          mkdir -p src/main/resources
          echo "encrypt:" > src/main/resources/bootstrap.yml
          echo "  key: '${{ secrets.ENCRYPTKEY }}'" >> src/main/resources/bootstrap.yml

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GTOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create Release Name
        id: release_name
        run: |
          echo "::set-output name=release_name::v-$(date +'%Y.%m.%d-%H%M%S')"

      - name: Build and Push Docker Dev Image
        run: |
          RELEASE_NAME="${{ steps.release_name.outputs.release_name }}"
          docker build --build-arg SPRING_PROFILES_ACTIVE=dev -t my-product-server:latest -f multistage.Dockerfile .
          docker tag my-product-server:latest ghcr.io/liberty52/liberty52-product-server:dev-$RELEASE_NAME
          docker push ghcr.io/liberty52/liberty52-product-server:dev-$RELEASE_NAME

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_name.outputs.release_name }}
          release_name: Release ${{ steps.release_name.outputs.release_name }}
          generateReleaseNotes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GTOKEN }}

      - name: Get latest Release tag
        id: latest-tag
        uses: robinraju/release-downloader@v1.8
        with:
          latest: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy AWS EC2 dev
        uses: appleboy/ssh-action@master
        env:
          DOCKER_IMAGE: ghcr.io/liberty52/liberty52-product-server:dev-${{ steps.latest-tag.outputs.tag_name }}

        with:
          host: ${{ secrets.REMOTE_IP_DEV }}
          username: ${{ secrets.REMOTE_SSH_ID_DEV }}
          key: ${{ secrets.REMOTE_SSH_KEY_DEV }}
          port: ${{ secrets.REMOTE_SSH_PORT_DEV }}
          script: |
            echo ${{ secrets.GTOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            sudo docker pull $DOCKER_IMAGE
            container_name=$(sudo docker ps | grep liberty52 | awk '{print $NF}')
            sudo docker stop $container_name
            sudo docker run -d -p 8080:8080 $DOCKER_IMAGE

      - name: Clean up
        run: docker logout ghcr.io