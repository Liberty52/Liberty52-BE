name: '리버티 ::: CI'

on:
  pull_request:
    paths: ['liberty-main-service/**', 'liberty-auth-service/**', 'liberty-authentication-library/**', 'build.gradle', 'setting.gradle', '.github/workflows/ci.yml']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create bootstrap.yml for liberty-main-service
        env:
          SECRET_CODE: ${{ secrets.BOOTSTRAP }}
          SECRET_DIR: liberty-main-service/src/main/resources
          SECRET_FILE_NAME: bootstrap.yml
        run: echo $SECRET_CODE | base64 --decode > $SECRET_DIR/$SECRET_FILE_NAME

      - name: Create bootstrap.yml for liberty-auth-service
        env:
          SECRET_CODE: ${{ secrets.BOOTSTRAP }}
          SECRET_DIR: liberty-auth-service/src/main/resources
          SECRET_FILE_NAME: bootstrap.yml
        run: echo $SECRET_CODE | base64 --decode > $SECRET_DIR/$SECRET_FILE_NAME

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar

